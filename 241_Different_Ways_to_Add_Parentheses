class Solution {
    private Map<String, List> map = new HashMap<>();
    
    public List<Integer> diffWaysToCompute(String input) {
        if (map.containsKey(input)) return map.get(input);
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < input.length(); ++i) {
            if (input.charAt(i) < '0') {
                List<Integer> v1 = diffWaysToCompute(input.substring(0, i));
                List<Integer> v2 = diffWaysToCompute(input.substring(i + 1));
                for (int i1 : v1) for (int i2 : v2) switch (input.charAt(i)) {
                    case '+': res.add(i1 + i2); break;
                    case '-': res.add(i1 - i2); break;
                    case '*': res.add(i1 * i2);
                }
            }
        }
        if (res.isEmpty()) res.add(Integer.parseInt(input));
        map.put(input, res);
        return res;
    }
}
